akka {

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = ${HOSTNAME}.akka
      port = 2551

      bind-hostname = ${HOSTNAME}
      bind-port = 2551
    }
  }

  cluster {

    seed-nodes = [
      "akka.tcp://akka-cluster-router-group@akka-master-0.akka:2551",
      "akka.tcp://akka-cluster-router-group@akka-worker-0.akka:2551"
    ]
    min-nr-of-members = 1

    roles = ["seed"]
    roles = ${?ROLES}

    singleton {
      # The actor name of the child singleton actor.
      singleton-name = "singleton"

      # Singleton among the nodes tagged with specified role.
      # If the role is not specified it's a singleton among all nodes in the cluster.
      role = ""

      # When a node is becoming oldest it sends hand-over request to previous oldest,
      # that might be leaving the cluster. This is retried with this interval until
      # the previous oldest confirms that the hand over has started or the previous
      # oldest member is removed from the cluster (+ akka.cluster.down-removal-margin).
      hand-over-retry-interval = 1s

      # The number of retries are derived from hand-over-retry-interval and
      # akka.cluster.down-removal-margin (or ClusterSingletonManagerSettings.removalMargin),
      # but it will never be less than this property.
      min-number-of-hand-over-retries = 10
    }

    singleton-proxy {
      # The actor name of the singleton actor that is started by the ClusterSingletonManager
      singleton-name = ${akka.cluster.singleton.singleton-name}

      # The role of the cluster nodes where the singleton can be deployed.
      # If the role is not specified then any node will do.
      role = "seed"

      # Interval at which the proxy will try to resolve the singleton instance.
      singleton-identification-interval = 1s

      # If the location of the singleton is unknown the proxy will buffer this
      # number of messages and deliver them when the singleton is identified.
      # When the buffer is full old messages will be dropped when new messages are
      # sent via the proxy.
      # Use 0 to disable buffering, i.e. messages will be dropped immediately if
      # the location of the singleton is unknown.
      # Maximum allowed buffer size is 10000.
      buffer-size = 1000
    }

  }

}
